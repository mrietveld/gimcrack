// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: main/resources/org/gimcrack/test/gegaw/marshalling/gegawmessages.proto

package org.gimcrack.test.gegaw.marshalling;

public final class ProtobufMessages {
  private ProtobufMessages() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface HeaderOrBuilder extends
      com.google.protobuf.GeneratedMessage.
          ExtendableMessageOrBuilder<Header> {

    // optional .org.gimcrack.test.gegaw.marshalling.Version version = 1;
    /**
     * <code>optional .org.gimcrack.test.gegaw.marshalling.Version version = 1;</code>
     *
     * <pre>
     * Version for which this message was created
     * </pre>
     */
    boolean hasVersion();
    /**
     * <code>optional .org.gimcrack.test.gegaw.marshalling.Version version = 1;</code>
     *
     * <pre>
     * Version for which this message was created
     * </pre>
     */
    org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version getVersion();
    /**
     * <code>optional .org.gimcrack.test.gegaw.marshalling.Version version = 1;</code>
     *
     * <pre>
     * Version for which this message was created
     * </pre>
     */
    org.gimcrack.test.gegaw.marshalling.ProtobufMessages.VersionOrBuilder getVersionOrBuilder();

    // optional .org.gimcrack.test.gegaw.marshalling.Signature signature = 4;
    /**
     * <code>optional .org.gimcrack.test.gegaw.marshalling.Signature signature = 4;</code>
     *
     * <pre>
     * Signature to prevent security concerns
     * </pre>
     */
    boolean hasSignature();
    /**
     * <code>optional .org.gimcrack.test.gegaw.marshalling.Signature signature = 4;</code>
     *
     * <pre>
     * Signature to prevent security concerns
     * </pre>
     */
    org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature getSignature();
    /**
     * <code>optional .org.gimcrack.test.gegaw.marshalling.Signature signature = 4;</code>
     *
     * <pre>
     * Signature to prevent security concerns
     * </pre>
     */
    org.gimcrack.test.gegaw.marshalling.ProtobufMessages.SignatureOrBuilder getSignatureOrBuilder();

    // optional bytes payload = 10;
    /**
     * <code>optional bytes payload = 10;</code>
     *
     * <pre>
     * byte blobs
     * </pre>
     */
    boolean hasPayload();
    /**
     * <code>optional bytes payload = 10;</code>
     *
     * <pre>
     * byte blobs
     * </pre>
     */
    com.google.protobuf.ByteString getPayload();
  }
  /**
   * Protobuf type {@code org.gimcrack.test.gegaw.marshalling.Header}
   */
  public static final class Header extends
      com.google.protobuf.GeneratedMessage.ExtendableMessage<
        Header> implements HeaderOrBuilder {
    // Use Header.newBuilder() to construct.
    private Header(com.google.protobuf.GeneratedMessage.ExtendableBuilder<org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header, ?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Header(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Header defaultInstance;
    public static Header getDefaultInstance() {
      return defaultInstance;
    }

    public Header getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Header(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = version_.toBuilder();
              }
              version_ = input.readMessage(org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(version_);
                version_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 34: {
              org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = signature_.toBuilder();
              }
              signature_ = input.readMessage(org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(signature_);
                signature_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 82: {
              bitField0_ |= 0x00000004;
              payload_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.gimcrack.test.gegaw.marshalling.ProtobufMessages.internal_static_org_gimcrack_test_gegaw_marshalling_Header_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.gimcrack.test.gegaw.marshalling.ProtobufMessages.internal_static_org_gimcrack_test_gegaw_marshalling_Header_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header.class, org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header.Builder.class);
    }

    public static com.google.protobuf.Parser<Header> PARSER =
        new com.google.protobuf.AbstractParser<Header>() {
      public Header parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Header(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Header> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .org.gimcrack.test.gegaw.marshalling.Version version = 1;
    public static final int VERSION_FIELD_NUMBER = 1;
    private org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version version_;
    /**
     * <code>optional .org.gimcrack.test.gegaw.marshalling.Version version = 1;</code>
     *
     * <pre>
     * Version for which this message was created
     * </pre>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .org.gimcrack.test.gegaw.marshalling.Version version = 1;</code>
     *
     * <pre>
     * Version for which this message was created
     * </pre>
     */
    public org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version getVersion() {
      return version_;
    }
    /**
     * <code>optional .org.gimcrack.test.gegaw.marshalling.Version version = 1;</code>
     *
     * <pre>
     * Version for which this message was created
     * </pre>
     */
    public org.gimcrack.test.gegaw.marshalling.ProtobufMessages.VersionOrBuilder getVersionOrBuilder() {
      return version_;
    }

    // optional .org.gimcrack.test.gegaw.marshalling.Signature signature = 4;
    public static final int SIGNATURE_FIELD_NUMBER = 4;
    private org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature signature_;
    /**
     * <code>optional .org.gimcrack.test.gegaw.marshalling.Signature signature = 4;</code>
     *
     * <pre>
     * Signature to prevent security concerns
     * </pre>
     */
    public boolean hasSignature() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.gimcrack.test.gegaw.marshalling.Signature signature = 4;</code>
     *
     * <pre>
     * Signature to prevent security concerns
     * </pre>
     */
    public org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature getSignature() {
      return signature_;
    }
    /**
     * <code>optional .org.gimcrack.test.gegaw.marshalling.Signature signature = 4;</code>
     *
     * <pre>
     * Signature to prevent security concerns
     * </pre>
     */
    public org.gimcrack.test.gegaw.marshalling.ProtobufMessages.SignatureOrBuilder getSignatureOrBuilder() {
      return signature_;
    }

    // optional bytes payload = 10;
    public static final int PAYLOAD_FIELD_NUMBER = 10;
    private com.google.protobuf.ByteString payload_;
    /**
     * <code>optional bytes payload = 10;</code>
     *
     * <pre>
     * byte blobs
     * </pre>
     */
    public boolean hasPayload() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes payload = 10;</code>
     *
     * <pre>
     * byte blobs
     * </pre>
     */
    public com.google.protobuf.ByteString getPayload() {
      return payload_;
    }

    private void initFields() {
      version_ = org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version.getDefaultInstance();
      signature_ = org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature.getDefaultInstance();
      payload_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessage
        .ExtendableMessage<org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(4, signature_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(10, payload_);
      }
      extensionWriter.writeUntil(200, output);
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, signature_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, payload_);
      }
      size += extensionsSerializedSize();
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.gimcrack.test.gegaw.marshalling.Header}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.ExtendableBuilder<
          org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header, Builder> implements org.gimcrack.test.gegaw.marshalling.ProtobufMessages.HeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.gimcrack.test.gegaw.marshalling.ProtobufMessages.internal_static_org_gimcrack_test_gegaw_marshalling_Header_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.gimcrack.test.gegaw.marshalling.ProtobufMessages.internal_static_org_gimcrack_test_gegaw_marshalling_Header_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header.class, org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header.Builder.class);
      }

      // Construct using org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getVersionFieldBuilder();
          getSignatureFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (versionBuilder_ == null) {
          version_ = org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version.getDefaultInstance();
        } else {
          versionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (signatureBuilder_ == null) {
          signature_ = org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature.getDefaultInstance();
        } else {
          signatureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        payload_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.gimcrack.test.gegaw.marshalling.ProtobufMessages.internal_static_org_gimcrack_test_gegaw_marshalling_Header_descriptor;
      }

      public org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header getDefaultInstanceForType() {
        return org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header.getDefaultInstance();
      }

      public org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header build() {
        org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header buildPartial() {
        org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header result = new org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (versionBuilder_ == null) {
          result.version_ = version_;
        } else {
          result.version_ = versionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (signatureBuilder_ == null) {
          result.signature_ = signature_;
        } else {
          result.signature_ = signatureBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.payload_ = payload_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header) {
          return mergeFrom((org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header other) {
        if (other == org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          mergeVersion(other.getVersion());
        }
        if (other.hasSignature()) {
          mergeSignature(other.getSignature());
        }
        if (other.hasPayload()) {
          setPayload(other.getPayload());
        }
        this.mergeExtensionFields(other);
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!extensionsAreInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Header) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .org.gimcrack.test.gegaw.marshalling.Version version = 1;
      private org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version version_ = org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version, org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version.Builder, org.gimcrack.test.gegaw.marshalling.ProtobufMessages.VersionOrBuilder> versionBuilder_;
      /**
       * <code>optional .org.gimcrack.test.gegaw.marshalling.Version version = 1;</code>
       *
       * <pre>
       * Version for which this message was created
       * </pre>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.gimcrack.test.gegaw.marshalling.Version version = 1;</code>
       *
       * <pre>
       * Version for which this message was created
       * </pre>
       */
      public org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version getVersion() {
        if (versionBuilder_ == null) {
          return version_;
        } else {
          return versionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.gimcrack.test.gegaw.marshalling.Version version = 1;</code>
       *
       * <pre>
       * Version for which this message was created
       * </pre>
       */
      public Builder setVersion(org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version value) {
        if (versionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          version_ = value;
          onChanged();
        } else {
          versionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.gimcrack.test.gegaw.marshalling.Version version = 1;</code>
       *
       * <pre>
       * Version for which this message was created
       * </pre>
       */
      public Builder setVersion(
          org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version.Builder builderForValue) {
        if (versionBuilder_ == null) {
          version_ = builderForValue.build();
          onChanged();
        } else {
          versionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.gimcrack.test.gegaw.marshalling.Version version = 1;</code>
       *
       * <pre>
       * Version for which this message was created
       * </pre>
       */
      public Builder mergeVersion(org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version value) {
        if (versionBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              version_ != org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version.getDefaultInstance()) {
            version_ =
              org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version.newBuilder(version_).mergeFrom(value).buildPartial();
          } else {
            version_ = value;
          }
          onChanged();
        } else {
          versionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.gimcrack.test.gegaw.marshalling.Version version = 1;</code>
       *
       * <pre>
       * Version for which this message was created
       * </pre>
       */
      public Builder clearVersion() {
        if (versionBuilder_ == null) {
          version_ = org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version.getDefaultInstance();
          onChanged();
        } else {
          versionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .org.gimcrack.test.gegaw.marshalling.Version version = 1;</code>
       *
       * <pre>
       * Version for which this message was created
       * </pre>
       */
      public org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version.Builder getVersionBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getVersionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.gimcrack.test.gegaw.marshalling.Version version = 1;</code>
       *
       * <pre>
       * Version for which this message was created
       * </pre>
       */
      public org.gimcrack.test.gegaw.marshalling.ProtobufMessages.VersionOrBuilder getVersionOrBuilder() {
        if (versionBuilder_ != null) {
          return versionBuilder_.getMessageOrBuilder();
        } else {
          return version_;
        }
      }
      /**
       * <code>optional .org.gimcrack.test.gegaw.marshalling.Version version = 1;</code>
       *
       * <pre>
       * Version for which this message was created
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version, org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version.Builder, org.gimcrack.test.gegaw.marshalling.ProtobufMessages.VersionOrBuilder> 
          getVersionFieldBuilder() {
        if (versionBuilder_ == null) {
          versionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version, org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version.Builder, org.gimcrack.test.gegaw.marshalling.ProtobufMessages.VersionOrBuilder>(
                  version_,
                  getParentForChildren(),
                  isClean());
          version_ = null;
        }
        return versionBuilder_;
      }

      // optional .org.gimcrack.test.gegaw.marshalling.Signature signature = 4;
      private org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature signature_ = org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature, org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature.Builder, org.gimcrack.test.gegaw.marshalling.ProtobufMessages.SignatureOrBuilder> signatureBuilder_;
      /**
       * <code>optional .org.gimcrack.test.gegaw.marshalling.Signature signature = 4;</code>
       *
       * <pre>
       * Signature to prevent security concerns
       * </pre>
       */
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.gimcrack.test.gegaw.marshalling.Signature signature = 4;</code>
       *
       * <pre>
       * Signature to prevent security concerns
       * </pre>
       */
      public org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature getSignature() {
        if (signatureBuilder_ == null) {
          return signature_;
        } else {
          return signatureBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.gimcrack.test.gegaw.marshalling.Signature signature = 4;</code>
       *
       * <pre>
       * Signature to prevent security concerns
       * </pre>
       */
      public Builder setSignature(org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature value) {
        if (signatureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          signature_ = value;
          onChanged();
        } else {
          signatureBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.gimcrack.test.gegaw.marshalling.Signature signature = 4;</code>
       *
       * <pre>
       * Signature to prevent security concerns
       * </pre>
       */
      public Builder setSignature(
          org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature.Builder builderForValue) {
        if (signatureBuilder_ == null) {
          signature_ = builderForValue.build();
          onChanged();
        } else {
          signatureBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.gimcrack.test.gegaw.marshalling.Signature signature = 4;</code>
       *
       * <pre>
       * Signature to prevent security concerns
       * </pre>
       */
      public Builder mergeSignature(org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature value) {
        if (signatureBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              signature_ != org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature.getDefaultInstance()) {
            signature_ =
              org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature.newBuilder(signature_).mergeFrom(value).buildPartial();
          } else {
            signature_ = value;
          }
          onChanged();
        } else {
          signatureBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.gimcrack.test.gegaw.marshalling.Signature signature = 4;</code>
       *
       * <pre>
       * Signature to prevent security concerns
       * </pre>
       */
      public Builder clearSignature() {
        if (signatureBuilder_ == null) {
          signature_ = org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature.getDefaultInstance();
          onChanged();
        } else {
          signatureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.gimcrack.test.gegaw.marshalling.Signature signature = 4;</code>
       *
       * <pre>
       * Signature to prevent security concerns
       * </pre>
       */
      public org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature.Builder getSignatureBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSignatureFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.gimcrack.test.gegaw.marshalling.Signature signature = 4;</code>
       *
       * <pre>
       * Signature to prevent security concerns
       * </pre>
       */
      public org.gimcrack.test.gegaw.marshalling.ProtobufMessages.SignatureOrBuilder getSignatureOrBuilder() {
        if (signatureBuilder_ != null) {
          return signatureBuilder_.getMessageOrBuilder();
        } else {
          return signature_;
        }
      }
      /**
       * <code>optional .org.gimcrack.test.gegaw.marshalling.Signature signature = 4;</code>
       *
       * <pre>
       * Signature to prevent security concerns
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature, org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature.Builder, org.gimcrack.test.gegaw.marshalling.ProtobufMessages.SignatureOrBuilder> 
          getSignatureFieldBuilder() {
        if (signatureBuilder_ == null) {
          signatureBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature, org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature.Builder, org.gimcrack.test.gegaw.marshalling.ProtobufMessages.SignatureOrBuilder>(
                  signature_,
                  getParentForChildren(),
                  isClean());
          signature_ = null;
        }
        return signatureBuilder_;
      }

      // optional bytes payload = 10;
      private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes payload = 10;</code>
       *
       * <pre>
       * byte blobs
       * </pre>
       */
      public boolean hasPayload() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes payload = 10;</code>
       *
       * <pre>
       * byte blobs
       * </pre>
       */
      public com.google.protobuf.ByteString getPayload() {
        return payload_;
      }
      /**
       * <code>optional bytes payload = 10;</code>
       *
       * <pre>
       * byte blobs
       * </pre>
       */
      public Builder setPayload(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        payload_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes payload = 10;</code>
       *
       * <pre>
       * byte blobs
       * </pre>
       */
      public Builder clearPayload() {
        bitField0_ = (bitField0_ & ~0x00000004);
        payload_ = getDefaultInstance().getPayload();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.gimcrack.test.gegaw.marshalling.Header)
    }

    static {
      defaultInstance = new Header(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.gimcrack.test.gegaw.marshalling.Header)
  }

  public interface VersionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 version_major = 1;
    /**
     * <code>optional int32 version_major = 1;</code>
     */
    boolean hasVersionMajor();
    /**
     * <code>optional int32 version_major = 1;</code>
     */
    int getVersionMajor();

    // optional int32 version_minor = 2;
    /**
     * <code>optional int32 version_minor = 2;</code>
     */
    boolean hasVersionMinor();
    /**
     * <code>optional int32 version_minor = 2;</code>
     */
    int getVersionMinor();

    // optional int32 version_revision = 3;
    /**
     * <code>optional int32 version_revision = 3;</code>
     */
    boolean hasVersionRevision();
    /**
     * <code>optional int32 version_revision = 3;</code>
     */
    int getVersionRevision();
  }
  /**
   * Protobuf type {@code org.gimcrack.test.gegaw.marshalling.Version}
   */
  public static final class Version extends
      com.google.protobuf.GeneratedMessage
      implements VersionOrBuilder {
    // Use Version.newBuilder() to construct.
    private Version(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Version(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Version defaultInstance;
    public static Version getDefaultInstance() {
      return defaultInstance;
    }

    public Version getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Version(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              versionMajor_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              versionMinor_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              versionRevision_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.gimcrack.test.gegaw.marshalling.ProtobufMessages.internal_static_org_gimcrack_test_gegaw_marshalling_Version_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.gimcrack.test.gegaw.marshalling.ProtobufMessages.internal_static_org_gimcrack_test_gegaw_marshalling_Version_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version.class, org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version.Builder.class);
    }

    public static com.google.protobuf.Parser<Version> PARSER =
        new com.google.protobuf.AbstractParser<Version>() {
      public Version parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Version(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Version> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 version_major = 1;
    public static final int VERSION_MAJOR_FIELD_NUMBER = 1;
    private int versionMajor_;
    /**
     * <code>optional int32 version_major = 1;</code>
     */
    public boolean hasVersionMajor() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 version_major = 1;</code>
     */
    public int getVersionMajor() {
      return versionMajor_;
    }

    // optional int32 version_minor = 2;
    public static final int VERSION_MINOR_FIELD_NUMBER = 2;
    private int versionMinor_;
    /**
     * <code>optional int32 version_minor = 2;</code>
     */
    public boolean hasVersionMinor() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 version_minor = 2;</code>
     */
    public int getVersionMinor() {
      return versionMinor_;
    }

    // optional int32 version_revision = 3;
    public static final int VERSION_REVISION_FIELD_NUMBER = 3;
    private int versionRevision_;
    /**
     * <code>optional int32 version_revision = 3;</code>
     */
    public boolean hasVersionRevision() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 version_revision = 3;</code>
     */
    public int getVersionRevision() {
      return versionRevision_;
    }

    private void initFields() {
      versionMajor_ = 0;
      versionMinor_ = 0;
      versionRevision_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, versionMajor_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, versionMinor_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, versionRevision_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, versionMajor_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, versionMinor_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, versionRevision_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.gimcrack.test.gegaw.marshalling.Version}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.gimcrack.test.gegaw.marshalling.ProtobufMessages.VersionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.gimcrack.test.gegaw.marshalling.ProtobufMessages.internal_static_org_gimcrack_test_gegaw_marshalling_Version_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.gimcrack.test.gegaw.marshalling.ProtobufMessages.internal_static_org_gimcrack_test_gegaw_marshalling_Version_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version.class, org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version.Builder.class);
      }

      // Construct using org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        versionMajor_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        versionMinor_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        versionRevision_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.gimcrack.test.gegaw.marshalling.ProtobufMessages.internal_static_org_gimcrack_test_gegaw_marshalling_Version_descriptor;
      }

      public org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version getDefaultInstanceForType() {
        return org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version.getDefaultInstance();
      }

      public org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version build() {
        org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version buildPartial() {
        org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version result = new org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.versionMajor_ = versionMajor_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.versionMinor_ = versionMinor_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.versionRevision_ = versionRevision_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version) {
          return mergeFrom((org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version other) {
        if (other == org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version.getDefaultInstance()) return this;
        if (other.hasVersionMajor()) {
          setVersionMajor(other.getVersionMajor());
        }
        if (other.hasVersionMinor()) {
          setVersionMinor(other.getVersionMinor());
        }
        if (other.hasVersionRevision()) {
          setVersionRevision(other.getVersionRevision());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Version) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 version_major = 1;
      private int versionMajor_ ;
      /**
       * <code>optional int32 version_major = 1;</code>
       */
      public boolean hasVersionMajor() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 version_major = 1;</code>
       */
      public int getVersionMajor() {
        return versionMajor_;
      }
      /**
       * <code>optional int32 version_major = 1;</code>
       */
      public Builder setVersionMajor(int value) {
        bitField0_ |= 0x00000001;
        versionMajor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 version_major = 1;</code>
       */
      public Builder clearVersionMajor() {
        bitField0_ = (bitField0_ & ~0x00000001);
        versionMajor_ = 0;
        onChanged();
        return this;
      }

      // optional int32 version_minor = 2;
      private int versionMinor_ ;
      /**
       * <code>optional int32 version_minor = 2;</code>
       */
      public boolean hasVersionMinor() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 version_minor = 2;</code>
       */
      public int getVersionMinor() {
        return versionMinor_;
      }
      /**
       * <code>optional int32 version_minor = 2;</code>
       */
      public Builder setVersionMinor(int value) {
        bitField0_ |= 0x00000002;
        versionMinor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 version_minor = 2;</code>
       */
      public Builder clearVersionMinor() {
        bitField0_ = (bitField0_ & ~0x00000002);
        versionMinor_ = 0;
        onChanged();
        return this;
      }

      // optional int32 version_revision = 3;
      private int versionRevision_ ;
      /**
       * <code>optional int32 version_revision = 3;</code>
       */
      public boolean hasVersionRevision() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 version_revision = 3;</code>
       */
      public int getVersionRevision() {
        return versionRevision_;
      }
      /**
       * <code>optional int32 version_revision = 3;</code>
       */
      public Builder setVersionRevision(int value) {
        bitField0_ |= 0x00000004;
        versionRevision_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 version_revision = 3;</code>
       */
      public Builder clearVersionRevision() {
        bitField0_ = (bitField0_ & ~0x00000004);
        versionRevision_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.gimcrack.test.gegaw.marshalling.Version)
    }

    static {
      defaultInstance = new Version(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.gimcrack.test.gegaw.marshalling.Version)
  }

  public interface SignatureOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string key_alias = 1;
    /**
     * <code>optional string key_alias = 1;</code>
     */
    boolean hasKeyAlias();
    /**
     * <code>optional string key_alias = 1;</code>
     */
    java.lang.String getKeyAlias();
    /**
     * <code>optional string key_alias = 1;</code>
     */
    com.google.protobuf.ByteString
        getKeyAliasBytes();

    // optional bytes signature = 2;
    /**
     * <code>optional bytes signature = 2;</code>
     */
    boolean hasSignature();
    /**
     * <code>optional bytes signature = 2;</code>
     */
    com.google.protobuf.ByteString getSignature();
  }
  /**
   * Protobuf type {@code org.gimcrack.test.gegaw.marshalling.Signature}
   */
  public static final class Signature extends
      com.google.protobuf.GeneratedMessage
      implements SignatureOrBuilder {
    // Use Signature.newBuilder() to construct.
    private Signature(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Signature(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Signature defaultInstance;
    public static Signature getDefaultInstance() {
      return defaultInstance;
    }

    public Signature getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Signature(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              keyAlias_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              signature_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.gimcrack.test.gegaw.marshalling.ProtobufMessages.internal_static_org_gimcrack_test_gegaw_marshalling_Signature_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.gimcrack.test.gegaw.marshalling.ProtobufMessages.internal_static_org_gimcrack_test_gegaw_marshalling_Signature_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature.class, org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature.Builder.class);
    }

    public static com.google.protobuf.Parser<Signature> PARSER =
        new com.google.protobuf.AbstractParser<Signature>() {
      public Signature parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Signature(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Signature> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string key_alias = 1;
    public static final int KEY_ALIAS_FIELD_NUMBER = 1;
    private java.lang.Object keyAlias_;
    /**
     * <code>optional string key_alias = 1;</code>
     */
    public boolean hasKeyAlias() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string key_alias = 1;</code>
     */
    public java.lang.String getKeyAlias() {
      java.lang.Object ref = keyAlias_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          keyAlias_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string key_alias = 1;</code>
     */
    public com.google.protobuf.ByteString
        getKeyAliasBytes() {
      java.lang.Object ref = keyAlias_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        keyAlias_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bytes signature = 2;
    public static final int SIGNATURE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString signature_;
    /**
     * <code>optional bytes signature = 2;</code>
     */
    public boolean hasSignature() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes signature = 2;</code>
     */
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }

    private void initFields() {
      keyAlias_ = "";
      signature_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getKeyAliasBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, signature_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getKeyAliasBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, signature_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.gimcrack.test.gegaw.marshalling.Signature}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.gimcrack.test.gegaw.marshalling.ProtobufMessages.SignatureOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.gimcrack.test.gegaw.marshalling.ProtobufMessages.internal_static_org_gimcrack_test_gegaw_marshalling_Signature_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.gimcrack.test.gegaw.marshalling.ProtobufMessages.internal_static_org_gimcrack_test_gegaw_marshalling_Signature_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature.class, org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature.Builder.class);
      }

      // Construct using org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyAlias_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        signature_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.gimcrack.test.gegaw.marshalling.ProtobufMessages.internal_static_org_gimcrack_test_gegaw_marshalling_Signature_descriptor;
      }

      public org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature getDefaultInstanceForType() {
        return org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature.getDefaultInstance();
      }

      public org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature build() {
        org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature buildPartial() {
        org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature result = new org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyAlias_ = keyAlias_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.signature_ = signature_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature) {
          return mergeFrom((org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature other) {
        if (other == org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature.getDefaultInstance()) return this;
        if (other.hasKeyAlias()) {
          bitField0_ |= 0x00000001;
          keyAlias_ = other.keyAlias_;
          onChanged();
        }
        if (other.hasSignature()) {
          setSignature(other.getSignature());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Signature) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string key_alias = 1;
      private java.lang.Object keyAlias_ = "";
      /**
       * <code>optional string key_alias = 1;</code>
       */
      public boolean hasKeyAlias() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string key_alias = 1;</code>
       */
      public java.lang.String getKeyAlias() {
        java.lang.Object ref = keyAlias_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          keyAlias_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string key_alias = 1;</code>
       */
      public com.google.protobuf.ByteString
          getKeyAliasBytes() {
        java.lang.Object ref = keyAlias_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          keyAlias_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string key_alias = 1;</code>
       */
      public Builder setKeyAlias(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        keyAlias_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string key_alias = 1;</code>
       */
      public Builder clearKeyAlias() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyAlias_ = getDefaultInstance().getKeyAlias();
        onChanged();
        return this;
      }
      /**
       * <code>optional string key_alias = 1;</code>
       */
      public Builder setKeyAliasBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        keyAlias_ = value;
        onChanged();
        return this;
      }

      // optional bytes signature = 2;
      private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes signature = 2;</code>
       */
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes signature = 2;</code>
       */
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }
      /**
       * <code>optional bytes signature = 2;</code>
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        signature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes signature = 2;</code>
       */
      public Builder clearSignature() {
        bitField0_ = (bitField0_ & ~0x00000002);
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.gimcrack.test.gegaw.marshalling.Signature)
    }

    static {
      defaultInstance = new Signature(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.gimcrack.test.gegaw.marshalling.Signature)
  }

  public interface InstanceOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 id = 2;
    /**
     * <code>optional int64 id = 2;</code>
     */
    boolean hasId();
    /**
     * <code>optional int64 id = 2;</code>
     */
    long getId();

    // optional string process_id = 3;
    /**
     * <code>optional string process_id = 3;</code>
     */
    boolean hasProcessId();
    /**
     * <code>optional string process_id = 3;</code>
     */
    java.lang.String getProcessId();
    /**
     * <code>optional string process_id = 3;</code>
     */
    com.google.protobuf.ByteString
        getProcessIdBytes();

    // optional int32 state = 4;
    /**
     * <code>optional int32 state = 4;</code>
     */
    boolean hasState();
    /**
     * <code>optional int32 state = 4;</code>
     */
    int getState();

    // optional int64 parent_process_instance_id = 12;
    /**
     * <code>optional int64 parent_process_instance_id = 12;</code>
     */
    boolean hasParentProcessInstanceId();
    /**
     * <code>optional int64 parent_process_instance_id = 12;</code>
     */
    long getParentProcessInstanceId();
  }
  /**
   * Protobuf type {@code org.gimcrack.test.gegaw.marshalling.Instance}
   */
  public static final class Instance extends
      com.google.protobuf.GeneratedMessage
      implements InstanceOrBuilder {
    // Use Instance.newBuilder() to construct.
    private Instance(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Instance(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Instance defaultInstance;
    public static Instance getDefaultInstance() {
      return defaultInstance;
    }

    public Instance getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Instance(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000002;
              processId_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              state_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000008;
              parentProcessInstanceId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.gimcrack.test.gegaw.marshalling.ProtobufMessages.internal_static_org_gimcrack_test_gegaw_marshalling_Instance_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.gimcrack.test.gegaw.marshalling.ProtobufMessages.internal_static_org_gimcrack_test_gegaw_marshalling_Instance_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.class, org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.Builder.class);
    }

    public static com.google.protobuf.Parser<Instance> PARSER =
        new com.google.protobuf.AbstractParser<Instance>() {
      public Instance parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Instance(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Instance> getParserForType() {
      return PARSER;
    }

    public interface NodeInstanceOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional int64 id = 1;
      /**
       * <code>optional int64 id = 1;</code>
       */
      boolean hasId();
      /**
       * <code>optional int64 id = 1;</code>
       */
      long getId();

      // optional int64 node_id = 2;
      /**
       * <code>optional int64 node_id = 2;</code>
       */
      boolean hasNodeId();
      /**
       * <code>optional int64 node_id = 2;</code>
       */
      long getNodeId();

      // optional int32 level = 5;
      /**
       * <code>optional int32 level = 5;</code>
       */
      boolean hasLevel();
      /**
       * <code>optional int32 level = 5;</code>
       */
      int getLevel();
    }
    /**
     * Protobuf type {@code org.gimcrack.test.gegaw.marshalling.Instance.NodeInstance}
     */
    public static final class NodeInstance extends
        com.google.protobuf.GeneratedMessage
        implements NodeInstanceOrBuilder {
      // Use NodeInstance.newBuilder() to construct.
      private NodeInstance(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private NodeInstance(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final NodeInstance defaultInstance;
      public static NodeInstance getDefaultInstance() {
        return defaultInstance;
      }

      public NodeInstance getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private NodeInstance(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                id_ = input.readInt64();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                nodeId_ = input.readInt64();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000004;
                level_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.gimcrack.test.gegaw.marshalling.ProtobufMessages.internal_static_org_gimcrack_test_gegaw_marshalling_Instance_NodeInstance_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.gimcrack.test.gegaw.marshalling.ProtobufMessages.internal_static_org_gimcrack_test_gegaw_marshalling_Instance_NodeInstance_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.NodeInstance.class, org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.NodeInstance.Builder.class);
      }

      public static com.google.protobuf.Parser<NodeInstance> PARSER =
          new com.google.protobuf.AbstractParser<NodeInstance>() {
        public NodeInstance parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new NodeInstance(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<NodeInstance> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional int64 id = 1;
      public static final int ID_FIELD_NUMBER = 1;
      private long id_;
      /**
       * <code>optional int64 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }

      // optional int64 node_id = 2;
      public static final int NODE_ID_FIELD_NUMBER = 2;
      private long nodeId_;
      /**
       * <code>optional int64 node_id = 2;</code>
       */
      public boolean hasNodeId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 node_id = 2;</code>
       */
      public long getNodeId() {
        return nodeId_;
      }

      // optional int32 level = 5;
      public static final int LEVEL_FIELD_NUMBER = 5;
      private int level_;
      /**
       * <code>optional int32 level = 5;</code>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 level = 5;</code>
       */
      public int getLevel() {
        return level_;
      }

      private void initFields() {
        id_ = 0L;
        nodeId_ = 0L;
        level_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt64(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt64(2, nodeId_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(5, level_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(2, nodeId_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, level_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.NodeInstance parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.NodeInstance parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.NodeInstance parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.NodeInstance parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.NodeInstance parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.NodeInstance parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.NodeInstance parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.NodeInstance parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.NodeInstance parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.NodeInstance parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.NodeInstance prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code org.gimcrack.test.gegaw.marshalling.Instance.NodeInstance}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.NodeInstanceOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.gimcrack.test.gegaw.marshalling.ProtobufMessages.internal_static_org_gimcrack_test_gegaw_marshalling_Instance_NodeInstance_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.gimcrack.test.gegaw.marshalling.ProtobufMessages.internal_static_org_gimcrack_test_gegaw_marshalling_Instance_NodeInstance_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.NodeInstance.class, org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.NodeInstance.Builder.class);
        }

        // Construct using org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.NodeInstance.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          id_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          nodeId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          level_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.gimcrack.test.gegaw.marshalling.ProtobufMessages.internal_static_org_gimcrack_test_gegaw_marshalling_Instance_NodeInstance_descriptor;
        }

        public org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.NodeInstance getDefaultInstanceForType() {
          return org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.NodeInstance.getDefaultInstance();
        }

        public org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.NodeInstance build() {
          org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.NodeInstance result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.NodeInstance buildPartial() {
          org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.NodeInstance result = new org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.NodeInstance(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.id_ = id_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.nodeId_ = nodeId_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.level_ = level_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.NodeInstance) {
            return mergeFrom((org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.NodeInstance)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.NodeInstance other) {
          if (other == org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.NodeInstance.getDefaultInstance()) return this;
          if (other.hasId()) {
            setId(other.getId());
          }
          if (other.hasNodeId()) {
            setNodeId(other.getNodeId());
          }
          if (other.hasLevel()) {
            setLevel(other.getLevel());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.NodeInstance parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.NodeInstance) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional int64 id = 1;
        private long id_ ;
        /**
         * <code>optional int64 id = 1;</code>
         */
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int64 id = 1;</code>
         */
        public long getId() {
          return id_;
        }
        /**
         * <code>optional int64 id = 1;</code>
         */
        public Builder setId(long value) {
          bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 id = 1;</code>
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = 0L;
          onChanged();
          return this;
        }

        // optional int64 node_id = 2;
        private long nodeId_ ;
        /**
         * <code>optional int64 node_id = 2;</code>
         */
        public boolean hasNodeId() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int64 node_id = 2;</code>
         */
        public long getNodeId() {
          return nodeId_;
        }
        /**
         * <code>optional int64 node_id = 2;</code>
         */
        public Builder setNodeId(long value) {
          bitField0_ |= 0x00000002;
          nodeId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 node_id = 2;</code>
         */
        public Builder clearNodeId() {
          bitField0_ = (bitField0_ & ~0x00000002);
          nodeId_ = 0L;
          onChanged();
          return this;
        }

        // optional int32 level = 5;
        private int level_ ;
        /**
         * <code>optional int32 level = 5;</code>
         */
        public boolean hasLevel() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 level = 5;</code>
         */
        public int getLevel() {
          return level_;
        }
        /**
         * <code>optional int32 level = 5;</code>
         */
        public Builder setLevel(int value) {
          bitField0_ |= 0x00000004;
          level_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 level = 5;</code>
         */
        public Builder clearLevel() {
          bitField0_ = (bitField0_ & ~0x00000004);
          level_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:org.gimcrack.test.gegaw.marshalling.Instance.NodeInstance)
      }

      static {
        defaultInstance = new NodeInstance(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:org.gimcrack.test.gegaw.marshalling.Instance.NodeInstance)
    }

    private int bitField0_;
    // optional int64 id = 2;
    public static final int ID_FIELD_NUMBER = 2;
    private long id_;
    /**
     * <code>optional int64 id = 2;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 id = 2;</code>
     */
    public long getId() {
      return id_;
    }

    // optional string process_id = 3;
    public static final int PROCESS_ID_FIELD_NUMBER = 3;
    private java.lang.Object processId_;
    /**
     * <code>optional string process_id = 3;</code>
     */
    public boolean hasProcessId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string process_id = 3;</code>
     */
    public java.lang.String getProcessId() {
      java.lang.Object ref = processId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          processId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string process_id = 3;</code>
     */
    public com.google.protobuf.ByteString
        getProcessIdBytes() {
      java.lang.Object ref = processId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        processId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 state = 4;
    public static final int STATE_FIELD_NUMBER = 4;
    private int state_;
    /**
     * <code>optional int32 state = 4;</code>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 state = 4;</code>
     */
    public int getState() {
      return state_;
    }

    // optional int64 parent_process_instance_id = 12;
    public static final int PARENT_PROCESS_INSTANCE_ID_FIELD_NUMBER = 12;
    private long parentProcessInstanceId_;
    /**
     * <code>optional int64 parent_process_instance_id = 12;</code>
     */
    public boolean hasParentProcessInstanceId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 parent_process_instance_id = 12;</code>
     */
    public long getParentProcessInstanceId() {
      return parentProcessInstanceId_;
    }

    private void initFields() {
      id_ = 0L;
      processId_ = "";
      state_ = 0;
      parentProcessInstanceId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(2, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(3, getProcessIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, state_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(12, parentProcessInstanceId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getProcessIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, state_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(12, parentProcessInstanceId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.gimcrack.test.gegaw.marshalling.Instance}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.gimcrack.test.gegaw.marshalling.ProtobufMessages.InstanceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.gimcrack.test.gegaw.marshalling.ProtobufMessages.internal_static_org_gimcrack_test_gegaw_marshalling_Instance_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.gimcrack.test.gegaw.marshalling.ProtobufMessages.internal_static_org_gimcrack_test_gegaw_marshalling_Instance_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.class, org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.Builder.class);
      }

      // Construct using org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        processId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        state_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        parentProcessInstanceId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.gimcrack.test.gegaw.marshalling.ProtobufMessages.internal_static_org_gimcrack_test_gegaw_marshalling_Instance_descriptor;
      }

      public org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance getDefaultInstanceForType() {
        return org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.getDefaultInstance();
      }

      public org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance build() {
        org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance buildPartial() {
        org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance result = new org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.processId_ = processId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.state_ = state_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.parentProcessInstanceId_ = parentProcessInstanceId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance) {
          return mergeFrom((org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance other) {
        if (other == org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasProcessId()) {
          bitField0_ |= 0x00000002;
          processId_ = other.processId_;
          onChanged();
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        if (other.hasParentProcessInstanceId()) {
          setParentProcessInstanceId(other.getParentProcessInstanceId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.gimcrack.test.gegaw.marshalling.ProtobufMessages.Instance) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 id = 2;
      private long id_ ;
      /**
       * <code>optional int64 id = 2;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 id = 2;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>optional int64 id = 2;</code>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 id = 2;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      // optional string process_id = 3;
      private java.lang.Object processId_ = "";
      /**
       * <code>optional string process_id = 3;</code>
       */
      public boolean hasProcessId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string process_id = 3;</code>
       */
      public java.lang.String getProcessId() {
        java.lang.Object ref = processId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          processId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string process_id = 3;</code>
       */
      public com.google.protobuf.ByteString
          getProcessIdBytes() {
        java.lang.Object ref = processId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          processId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string process_id = 3;</code>
       */
      public Builder setProcessId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        processId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string process_id = 3;</code>
       */
      public Builder clearProcessId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        processId_ = getDefaultInstance().getProcessId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string process_id = 3;</code>
       */
      public Builder setProcessIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        processId_ = value;
        onChanged();
        return this;
      }

      // optional int32 state = 4;
      private int state_ ;
      /**
       * <code>optional int32 state = 4;</code>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 state = 4;</code>
       */
      public int getState() {
        return state_;
      }
      /**
       * <code>optional int32 state = 4;</code>
       */
      public Builder setState(int value) {
        bitField0_ |= 0x00000004;
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 state = 4;</code>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000004);
        state_ = 0;
        onChanged();
        return this;
      }

      // optional int64 parent_process_instance_id = 12;
      private long parentProcessInstanceId_ ;
      /**
       * <code>optional int64 parent_process_instance_id = 12;</code>
       */
      public boolean hasParentProcessInstanceId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 parent_process_instance_id = 12;</code>
       */
      public long getParentProcessInstanceId() {
        return parentProcessInstanceId_;
      }
      /**
       * <code>optional int64 parent_process_instance_id = 12;</code>
       */
      public Builder setParentProcessInstanceId(long value) {
        bitField0_ |= 0x00000008;
        parentProcessInstanceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 parent_process_instance_id = 12;</code>
       */
      public Builder clearParentProcessInstanceId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        parentProcessInstanceId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.gimcrack.test.gegaw.marshalling.Instance)
    }

    static {
      defaultInstance = new Instance(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.gimcrack.test.gegaw.marshalling.Instance)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_gimcrack_test_gegaw_marshalling_Header_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_gimcrack_test_gegaw_marshalling_Header_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_gimcrack_test_gegaw_marshalling_Version_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_gimcrack_test_gegaw_marshalling_Version_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_gimcrack_test_gegaw_marshalling_Signature_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_gimcrack_test_gegaw_marshalling_Signature_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_gimcrack_test_gegaw_marshalling_Instance_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_gimcrack_test_gegaw_marshalling_Instance_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_gimcrack_test_gegaw_marshalling_Instance_NodeInstance_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_gimcrack_test_gegaw_marshalling_Instance_NodeInstance_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nFmain/resources/org/gimcrack/test/gegaw" +
      "/marshalling/gegawmessages.proto\022#org.gi" +
      "mcrack.test.gegaw.marshalling\"\242\001\n\006Header" +
      "\022=\n\007version\030\001 \001(\0132,.org.gimcrack.test.ge" +
      "gaw.marshalling.Version\022A\n\tsignature\030\004 \001" +
      "(\0132..org.gimcrack.test.gegaw.marshalling" +
      ".Signature\022\017\n\007payload\030\n \001(\014*\005\010d\020\310\001\"Q\n\007Ve" +
      "rsion\022\025\n\rversion_major\030\001 \001(\005\022\025\n\rversion_" +
      "minor\030\002 \001(\005\022\030\n\020version_revision\030\003 \001(\005\"1\n" +
      "\tSignature\022\021\n\tkey_alias\030\001 \001(\t\022\021\n\tsignatu",
      "re\030\002 \001(\014\"\231\001\n\010Instance\022\n\n\002id\030\002 \001(\003\022\022\n\npro" +
      "cess_id\030\003 \001(\t\022\r\n\005state\030\004 \001(\005\022\"\n\032parent_p" +
      "rocess_instance_id\030\014 \001(\003\032:\n\014NodeInstance" +
      "\022\n\n\002id\030\001 \001(\003\022\017\n\007node_id\030\002 \001(\003\022\r\n\005level\030\005" +
      " \001(\005B7\n#org.gimcrack.test.gegaw.marshall" +
      "ingB\020ProtobufMessages"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_org_gimcrack_test_gegaw_marshalling_Header_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_org_gimcrack_test_gegaw_marshalling_Header_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_gimcrack_test_gegaw_marshalling_Header_descriptor,
              new java.lang.String[] { "Version", "Signature", "Payload", });
          internal_static_org_gimcrack_test_gegaw_marshalling_Version_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_org_gimcrack_test_gegaw_marshalling_Version_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_gimcrack_test_gegaw_marshalling_Version_descriptor,
              new java.lang.String[] { "VersionMajor", "VersionMinor", "VersionRevision", });
          internal_static_org_gimcrack_test_gegaw_marshalling_Signature_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_org_gimcrack_test_gegaw_marshalling_Signature_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_gimcrack_test_gegaw_marshalling_Signature_descriptor,
              new java.lang.String[] { "KeyAlias", "Signature", });
          internal_static_org_gimcrack_test_gegaw_marshalling_Instance_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_org_gimcrack_test_gegaw_marshalling_Instance_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_gimcrack_test_gegaw_marshalling_Instance_descriptor,
              new java.lang.String[] { "Id", "ProcessId", "State", "ParentProcessInstanceId", });
          internal_static_org_gimcrack_test_gegaw_marshalling_Instance_NodeInstance_descriptor =
            internal_static_org_gimcrack_test_gegaw_marshalling_Instance_descriptor.getNestedTypes().get(0);
          internal_static_org_gimcrack_test_gegaw_marshalling_Instance_NodeInstance_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_gimcrack_test_gegaw_marshalling_Instance_NodeInstance_descriptor,
              new java.lang.String[] { "Id", "NodeId", "Level", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
